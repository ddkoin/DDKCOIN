{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "DDK",
    "description": "DDK API's from Swagger",
    "termsOfService": "http://swagger.io/terms/",
    "schemes": []
  },
  "basePath": "/",
  "tags": [
    {
      "name": "freeze",
      "description": "API for freeze"
    },
    {
      "name": "account",
      "description": "API for account"
    },
    {
      "name": "transaction",
      "description": "API for transaction"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/accounts/generatePublicKey": {
      "post": {
        "tags": [
          "account"
        ],
        "description": "Generates public key for given secret",
        "operationId": "generatePublicKey",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "defaultValue": "{\n    \"secret\": \"\"\n}", 
            "description": "generatePublicKey",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      }
    },
    "/api/accounts": {
      "get": {
        "tags": [
          "account"
        ],
        "description": "Get account Information",
        "operationId": "findByAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "fetch balance",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/response1"
            }
          }
        }
      }
    },
    "/api/accounts/getBalance": {
      "get": {
        "tags": [
          "account"
        ],
        "description": "Returns the balance of account",
        "operationId": "findByAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "fetch balance",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "description": "user token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/response1"
            }
          }
        }
      }
    },
    "/api/accounts/open": {
      "post": {
        "tags": [
          "account"
        ],
        "description": "Open An account",
        "operationId": "open",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "defaultValue": "{\n    \"secret\": \"\"\n}",
            "description": "generatePublicKey",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      }
    },
    "/api/accounts/lock": {
      "post": {
        "tags": [
          "account"
        ],
        "description": "Lock User's account",
        "operationId": "Lock",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "defaultValue": "{\n    \"address\": \"\"\n}",
            "description": "address is required",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      }
    },
    "/api/accounts/unlock": {
      "post": {
        "tags": [
          "account"
        ],
        "description": "Unlock User's account",
        "operationId": "unlock",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "defaultValue": "{\n    \"address\": \"\"\n}",
            "description": "address is required",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      }
    },
    "/api/accounts/logout": {
      "post": {
        "tags": [
          "account"
        ],
        "description": "Logout a User",
        "operationId": "logout",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "defaultValue": "{\n    \"address\": \"\",\n    \"token\": \"\"\n}",
            "description": "address is required",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      }
    },
    "/api/transactions/get": {
      "get": {
        "tags": [
          "transaction"
        ],
        "description": "Get list of transactions",
        "operationId": "findById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Get list of transactions",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/response1"
            }
          }
        }
      }
    },
    "/api/transactions/unconfirmed/get": {
      "get": {
        "tags": [
          "transaction"
        ],
        "description": "Get unconfirmed transactions",
        "operationId": "findUnconfirmedById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Get unconfirmed transactions",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/response1"
            }
          }
        }
      }
    },
    "/api/transactions": {
      "get": {
        "tags": [
          "transaction"
        ],
        "description": "Get List of transactions",
        "operationId": "findByBlockId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "blockId",
            "in": "query",
            "description": "Get List of transactions",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "$ref": "#/definitions/response1"
            }
          }
        }
      },
      "put": {
        "tags": [
          "transaction"
        ],
        "description": "Send transaction",
        "operationId": "send",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "defaultValue": "{ \n    \"secret\" : \"\", \n    \"amount\" : \"\",\n    \"recipientId\" : \"\"\n}",
            "description": "generatePublicKey",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      }
    },
    "/api/frogings/freeze": {
      "post": {
        "tags": [
          "freeze"
        ],
        "description": "freeze order",
        "operationId": "freeze",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "defaultValue": "{\n    \"secret\": \"\",\n    \"freezedAmount\" : \"\", \n    \"publicKey\": \"\"\n}",
            "description": "freezeOrder",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      }
    },
    "/api/shiftOrder/sendfreezeOrder": {
      "post": {
        "tags": [
          "freeze"
        ],
        "description": "Send freeze order",
        "operationId": "sendFreezeOrder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "defaultValue": "{\n    \"secret\": \"\",\n    \"stakeId\" : \"\", \n    \"recipientId\": \"\",\n    \"freezedAmount\": \"\"\n}",
            "description": "sendOrder",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      }
    },
    "/api/frogings/getAllOrders": {
      "get": {
        "tags": [
          "freeze"
        ],
        "description": "get all freezed orders",
        "operationId": "getAllOrders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "secret",
            "in": "query",
            "description": "secret of freeze order account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      }
    },
    "/api/frogings/getAllActiveOrders": {
      "get": {
        "tags": [
          "freeze"
        ],
        "description": "get all active freeze orders",
        "operationId": "getAllActiveOrders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "secret",
            "in": "query",
            "description": "secret of freeze order account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      }
    },
    "/api/frogings/countStakeholders": {
      "get": {
        "tags": [
          "freeze"
        ],
        "description": "count Stakeholders",
        "operationId": "countStakeholders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "none",
            "in": "query",
            "description": "Get count of active stakeholders",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "create response",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "create": {
      "properties": {
        "eventId": {
          "required": true,
          "type": "string",
          "example": "mathmaticial"
        },
        "numberRequired": {
          "required": true,
          "type": "integer",
          "format": "int64",
          "example": 500
        }
      }
    },
    "response1": {
      "properties": {
        "jobID": {
          "required": true,
          "type": "string",
          "example": "23423456543"
        },
        "request": {
          "required": true,
          "type": "schema",
          "example": {
            "eventId": "mathmaticial",
            "numberRequired": 500
          }
        }
      }
    },
    "response": {
      "properties": {
        "jobID": {
          "required": true,
          "type": "string",
          "example": "12321432423"
        }
      }
    },
    "delete": {
      "properties": {
        "jobID": {
          "required": true,
          "type": "string",
          "example": "234344234234"
        },
        "status": {
          "required": true,
          "type": "string",
          "example": "deleted"
        }
      }
    },
    "400error": {
      "properties": {
        "message": {
          "type": "string",
          "example": "400 Bad Request"
        }
      }
    }
  }
}
